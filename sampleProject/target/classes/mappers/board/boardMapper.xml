<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="board">
	<!-- 01_01. 게시글 전체목록 조회 및 검색 조회까지 -->
	<select id="listAll" resultType="com.example.sampleproject.model.board.dto.BoardVO">
	    <!-- 목록 조회 및 페이징 전체 쿼리 -->
	    <include refid="pagingHeader"></include>
	        SELECT rownum, bno, title, content, b.regdate, viewcnt, user_name as userName
	        FROM tbl_board b, tbl_member m
	        <include refid="search"></include>
	        ORDER BY bno DESC, b.regdate DESC 
	    <include refid="pagingFooter"></include>  
	</select>
	 
	<!-- 01_02. 게시글 레코드 갯수 -->
	<select id="countArticle" resultType="int">
	    
	    SELECT COUNT(*)
	    FROM tbl_board b, tbl_member m
	    
	    <!-- WHERE절을 include 태그로 삽입 -->
	    <include refid="search"></include>
	    
	</select>
	 
	<!-- 검색 조건 sql -->
	<!-- 반복되는 sql의 일부를 sql태그를 이용하여 따로 빼둘수 있다. -->
	<sql id="search">
	    <choose>
	        <!-- 검색옵션이 전체 검색일 경우 -->
	        <when test="searchOption == 'all'">
	            WHERE b.writer = m.user_id
        		AND    
            		(user_name like '%'||#{keyword}||'%'
            		OR content like '%'||#{keyword}||'%'
            		OR title like '%'||#{keyword}||'%')
	        </when>
	        <!-- 전체 검색이 아닐 경우 -->
	        <otherwise>
	            WHERE b.writer = m.user_id 
            	AND ${searchOption} like '%'||#{keyword}||'%'
	        </otherwise>
	    </choose>
	</sql>
	
	<!-- 페이징 sql -->
	<sql id="pagingHeader">
	    SELECT * FROM (
	        SELECT ROWNUM AS rn, A.* FROM (
	</sql>
	<sql id="pagingFooter">
	        ) A
	    ) WHERE rn BETWEEN #{start} AND #{end}
	</sql>

    <!-- 02. 게시글 작성 -->
    <insert id="insert">
        INSERT INTO tbl_board (
          bno, 
          title, 
          content, 
          writer
        ) VALUES (
          (SELECT NVL(MAX(bno)+1, 1)FROM tbl_board),
          #{title},
          #{content},
          #{writer}
        )
    </insert>
    <!--03. 게시글 상세보기 조회 -->
    <select id="view" resultType="com.example.sampleproject.model.board.dto.BoardVO">
        <!-- SELECT * FROM tbl_board  --> 
 		SELECT bno, title, content, b.regdate, writer, viewcnt, user_name AS userName
 		FROM tbl_board b, tbl_member m
 		WHERE b.writer = m.user_id
 		AND bno = #{bno}
    </select>
    <!-- 04. 게시글 조회수 증가처리 -->
    <update id="increaseViewcnt">
        UPDATE tbl_board SET viewcnt = viewcnt + 1 
        WHERE bno = #{bno}
    </update>
    <!-- 05. 게시글 수정처리 -->
    <update id="updateArticle">
        UPDATE tbl_board SET
            title = #{title},
            content = #{content},
            writer = #{writer}
        WHERE bno = #{bno}
    </update>
    <!-- 06. 게시글 삭제처리 -->
    <delete id="deleteArticle">
        DELETE FROM tbl_board
        WHERE bno = #{bno}
    </delete>
</mapper>














